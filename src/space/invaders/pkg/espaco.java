package space.invaders.pkg;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;

public class espaco extends javax.swing.JFrame {

    /**
     * Creates new form espaco
     */
    public boolean isDificuldadeNormal;
    public boolean isPausado;
    
    public espaco(menuInicial mu) {
        initComponents();
        this.isDificuldadeNormal = mu.isDificuldadeNormal;
        this.isPausado = false;

        setLocationRelativeTo(null);
        setSize(550,550);
        setResizable(false);

        setVisible(true);
        PausadoLabel.setVisible(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PausadoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Space Invaders");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        PausadoLabel.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        PausadoLabel.setText("Pausado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(PausadoLabel)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(PausadoLabel)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        int tecla = evt.getKeyCode();

        switch (tecla) {
            case KeyEvent.VK_A:
                
                break;
            case KeyEvent.VK_D:
                
                break;
            case KeyEvent.VK_SPACE:
                
                break;
            case KeyEvent.VK_P:
                // pausa o jogo. Chama o menu de pause e trava o jogo.
                
                PausadoLabel.setVisible(true);
                menuPausa mp = new menuPausa(this);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        int tecla = evt.getKeyCode();

        switch (tecla) {
            case KeyEvent.VK_A:
                
                break;
            case KeyEvent.VK_D:
                
                break;
            case KeyEvent.VK_SPACE:
                
                break;
            default:
                break;
        }
    }//GEN-LAST:event_formKeyReleased

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(espaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(espaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(espaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(espaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new espaco(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PausadoLabel;
    // End of variables declaration//GEN-END:variables

    
    public void desenhaTela(){
        
        this.getContentPane().add(new JComponent() 
            {
                @Override
                public void paint(Graphics g)
                {
                   
                }            
            }
        );
        
        /*
        Rectangle pixel = new Rectangle(0,0,10,10);

        this.getContentPane().add(new JComponent(){
        @Override
            public void paint(Graphics g) {
                for(int i = 0; i < 40; i ++){
                    for(int j = 0; j < 45; j ++){
                        pixel.x = i*10; 
                        pixel.y = j*10;
                        //pega o valor da matriz e define a cor
                        switch (matriz[i][j]){
                            case '0' -> g.setColor(Color.black);
                            case '1' -> g.setColor(Color.white);
                            case '2' -> g.setColor(Color.blue);
                            case '3' -> g.setColor(Color.red);
                            case '4' -> g.setColor(Color.green);
                            case '5' -> g.setColor(Color.yellow);
                            default -> g.setColor(Color.white);
                        }
                        
                        g.drawRect(pixel.x, pixel.y, pixel.width, pixel.height);
                        g.fillRect(pixel.x, pixel.y, pixel.width, pixel.height);
                    }
                }
            }
        });

        */
    }


}
